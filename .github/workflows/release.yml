name: Build and Publish Package

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force_publish:
        description: 'Force publish even if tag exists'
        required: false
        default: false
        type: boolean

permissions:
  contents: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Extract version from package.json
        run: echo "VERSION=v$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Check if tag exists
        run: |
          if git tag -l | grep -q "^${{ env.VERSION }}$"; then
            echo "Tag ${{ env.VERSION }} already exists."
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "Tag ${{ env.VERSION }} doesn't exist yet."
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create Git tag
        if: env.TAG_EXISTS == 'false' || inputs.force_publish
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          # Delete tag if it exists and we're force publishing
          if [[ "${{ env.TAG_EXISTS }}" == "true" && "${{ inputs.force_publish }}" == "true" ]]; then
            git tag -d ${{ env.VERSION }}
            git push origin :refs/tags/${{ env.VERSION }}
            echo "Removed existing tag for force publish"
          fi
          # Create and push new tag
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}

      - name: Configure npm authentication
        if: env.TAG_EXISTS == 'false' || inputs.force_publish
        run: echo '//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}' > .npmrc

      - name: Publish to npm
        if: env.TAG_EXISTS == 'false' || inputs.force_publish
        run: npm publish
